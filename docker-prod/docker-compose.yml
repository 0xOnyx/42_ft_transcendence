version: '3.6'

services:
  nginx:
    image: nginx:latest
    container_name: nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../backend/image:/backend/image
      - ../front/build:/var/www/front:delegated
    depends_on:
      frontend_builder:
        condition: service_completed_successfully
    networks:
      - transcendence

  postgres:
    container_name: postgres-prod
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword #TODO: use .env
      POSTGRES_DB: transcendence
    ports:
      - "5432:5432"
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - transcendence


  frontend_builder:
    container_name: frontend_builder-prod
    build: ./front
    volumes:
      - ../front:/app:delegated

  backend-prod:
    container_name: backend-prod
    build: ./back
    volumes:
      - ../backend:/app:delegated
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    networks:
      - transcendence
    restart: on-failure:5

networks:
  transcendence:
    driver: bridge
